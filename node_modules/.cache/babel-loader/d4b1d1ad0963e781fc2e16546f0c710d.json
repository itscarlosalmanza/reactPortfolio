{"ast":null,"code":"var _jsxFileName = \"/Users/carlosalmanza/Desktop/class-app/src/components/Form/index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\"\n    };\n\n    this.handleInputChange = event => {\n      // Getting the value and name of the input which triggered the change\n      const value = event.target.value;\n      const name = event.target.name;\n      const password = event.target.password;\n\n      if (name == \"password\") {\n        value = value.substring(0, 15);\n      } // Updating the input's state\n\n\n      this.setState({\n        [name]: value,\n        [password]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      // Preventing the default behavior of the form submit (which is to refresh the page)\n      event.preventDefault();\n\n      if (!this.state.firstName || !this.state.lastName) {\n        alert(\"FILL YOUR FIRST AND LAST\");\n      } else if (this.state.password.length < 6) // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\n        alert(`Hello ${this.state.firstName} ${this.state.lastName} ${this.state.password}`);\n\n      this.setState({\n        firstName: \"\",\n        lastName: \"\",\n        password: \"\"\n      });\n    };\n  }\n\n  render() {\n    // Notice how each input has a `value`, `name`, and `onChange` prop\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hello \", this.state.firstName, \" \", this.state.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.firstName,\n          name: \"firstName\",\n          onChange: this.handleInputChange,\n          type: \"text\",\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.lastName,\n          name: \"lastName\",\n          onChange: this.handleInputChange,\n          type: \"text\",\n          placeholder: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.password,\n          name: \"password\",\n          onChange: this.handleInputChange,\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleFormSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/carlosalmanza/Desktop/class-app/src/components/Form/index.js"],"names":["React","Component","Form","state","firstName","lastName","password","handleInputChange","event","value","target","name","substring","setState","handleFormSubmit","preventDefault","alert","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Form extends Component {\n  // Setting the component's initial state\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\"\n  };\n\n  handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    const value = event.target.value;\n    const name = event.target.name;\n    const password = event.target.password;\n\n    if (name == \"password\") {\n      value = value.substring(0, 15);\n    }\n\n    // Updating the input's state\n    this.setState({\n      [name]: value,\n      [password] : value,\n      \n    });\n   \n  };\n    \n\n  handleFormSubmit = event => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    event.preventDefault();\n    if (!this.state.firstName || !this.state.lastName) {\n      alert(\"FILL YOUR FIRST AND LAST\");\n    } else if (this.state.password.length <6 )\n\n    // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\n    alert(`Hello ${this.state.firstName} ${this.state.lastName} ${this.state.password}`);\n    this.setState({\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\"\n    });\n  };\n\n  render() {\n    // Notice how each input has a `value`, `name`, and `onChange` prop\n    return (\n      <div>\n        <p>\n          Hello {this.state.firstName} {this.state.lastName}\n        </p>\n        <form className=\"form\">\n          <input\n            value={this.state.firstName}\n            name=\"firstName\"\n            onChange={this.handleInputChange}\n            type=\"text\"\n            placeholder=\"First Name\"\n          />\n          <input\n            value={this.state.lastName}\n            name=\"lastName\"\n            onChange={this.handleInputChange}\n            type=\"text\"\n            placeholder=\"Last Name\"\n          />\n            <input\n            value={this.state.password}\n            name=\"password\"\n            onChange={this.handleInputChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <button onClick={this.handleFormSubmit}>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}