{"ast":null,"code":"var _jsxFileName = \"/Users/carlosalmanza/Desktop/class-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Count() {\n  _s();\n\n  const inputRef = useRef();\n  const [count, dispatch] = useReducer((state, action) => {\n    switch (action) {\n      case \"add\":\n        return state + 1;\n\n      case \"subtract\":\n        return state - 1;\n\n      case \"change\":\n        // convert the value from the input into an integer\n        const newCount = parseInt(inputRef.current.value); // only update the count if the value is numeric\n\n        if (isNaN(newCount)) {\n          return state;\n        }\n\n        return newCount;\n\n      default:\n        return state;\n    }\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mt-5 mb-5\",\n      onClick: () => dispatch(\"add\"),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger mt-5\",\n      onClick: () => dispatch(\"subtract\"),\n      children: \"Subtract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control w-25 mx-auto mt-5\",\n      placeholder: \"Type new value...\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning mt-5\",\n      onClick: () => dispatch(\"change\"),\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Count, \"SzPR5pNtKgTUO6L/k+j5BoO7AqU=\");\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["/Users/carlosalmanza/Desktop/class-app/src/App.js"],"names":["React","useReducer","useRef","Count","inputRef","count","dispatch","state","action","newCount","parseInt","current","value","isNaN"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,OAAO,WAAP;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAAC,CAACM,KAAD,EAAQC,MAAR,KAAmB;AACtD,YAAQA,MAAR;AACA,WAAK,KAAL;AACE,eAAOD,KAAK,GAAG,CAAf;;AACF,WAAK,UAAL;AACE,eAAOA,KAAK,GAAG,CAAf;;AACF,WAAK,QAAL;AACE;AACA,cAAME,QAAQ,GAAGC,QAAQ,CAACN,QAAQ,CAACO,OAAT,CAAiBC,KAAlB,CAAzB,CAFF,CAIE;;AACA,YAAIC,KAAK,CAACJ,QAAD,CAAT,EAAqB;AACnB,iBAAOF,KAAP;AACD;;AACD,eAAOE,QAAP;;AACF;AACE,eAAOF,KAAP;AAfF;AAiBD,GAlBmC,EAkBjC,CAlBiC,CAApC;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAA8C,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC,KAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,UAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AACE,MAAA,SAAS,EAAC,gCADZ;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,GAAG,EAAEF;AAHP;AAAA;AAAA;AAAA;AAAA,YARF,eAaE;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,OAAO,EAAE,MAAME,QAAQ,CAAC,QAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA1CQH,K;;KAAAA,K;AA4CT,eAAeA,KAAf","sourcesContent":["import React, { useReducer, useRef } from \"react\";\nimport \"./App.css\";\n\nfunction Count() {\n  const inputRef = useRef();\n\n  const [count, dispatch] = useReducer((state, action) => {\n    switch (action) {\n    case \"add\":\n      return state + 1;\n    case \"subtract\":\n      return state - 1;\n    case \"change\":\n      // convert the value from the input into an integer\n      const newCount = parseInt(inputRef.current.value);\n\n      // only update the count if the value is numeric\n      if (isNaN(newCount)) {\n        return state\n      }\n      return newCount;\n    default:\n      return state;\n    }\n  }, 0);\n\n  return (\n    <div className=\"App\">\n      <button className=\"btn btn-success mt-5 mb-5\" onClick={() => dispatch(\"add\")}>\n        Add\n      </button>\n      <div>{count}</div>\n      <button className=\"btn btn-danger mt-5\" onClick={() => dispatch(\"subtract\")}>\n        Subtract\n      </button>\n      <input\n        className=\"form-control w-25 mx-auto mt-5\"\n        placeholder=\"Type new value...\"\n        ref={inputRef}\n      />\n      <button className=\"btn btn-warning mt-5\" onClick={() => dispatch(\"change\")}>\n        Change\n      </button>\n    </div>\n  );\n}\n\nexport default Count;\n"]},"metadata":{},"sourceType":"module"}