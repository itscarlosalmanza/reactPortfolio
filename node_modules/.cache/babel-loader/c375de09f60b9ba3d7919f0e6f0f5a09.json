{"ast":null,"code":"var _jsxFileName = \"/Users/carlosalmanza/Desktop/class-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport ThemeContext from \"./components/ThemeContext\";\nimport UserContext from \"./components/UserContext\";\nimport AlertContext from \"./components/AlertContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({\n    name: \"Bob\",\n    getUserToken: getUserToken\n  });\n  const [alert, setAlert] = useState({\n    display: false,\n    theme: \"success\",\n    onClick: (theme, display) => setAlert({ ...alert,\n      theme,\n      display\n    })\n  });\n\n  function getUserToken() {\n    return \"SampleToken123\";\n  } // Here we are overwriting each Context Object with values from the state of App.js and a string literal.\n\n\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: alert,\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: user,\n      children: /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n        value: \"dark\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"YED0wArtIGwV187Qf1QmMnDHeCE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/carlosalmanza/Desktop/class-app/src/App.js"],"names":["React","useState","Home","ThemeContext","UserContext","AlertContext","App","user","setUser","name","getUserToken","alert","setAlert","display","theme","onClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAC/BQ,IAAAA,IAAI,EAAE,KADyB;AAE/BC,IAAAA,YAAY,EAAEA;AAFiB,GAAD,CAAhC;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AACjCY,IAAAA,OAAO,EAAE,KADwB;AAEjCC,IAAAA,KAAK,EAAE,SAF0B;AAGjCC,IAAAA,OAAO,EAAE,CAACD,KAAD,EAAQD,OAAR,KAAoBD,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,MAAAA,KAAX;AAAkBD,MAAAA;AAAlB,KAAD;AAHJ,GAAD,CAAlC;;AAMA,WAASH,YAAT,GAAwB;AACtB,WAAO,gBAAP;AACD,GAfY,CAiBb;;;AACE,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,KAA9B;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEJ,IAA7B;AAAA,6BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE,MAA9B;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA3BMD,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport ThemeContext from \"./components/ThemeContext\";\nimport UserContext from \"./components/UserContext\";\nimport AlertContext from \"./components/AlertContext\";\n\nfunction App() {\n\n  const [user, setUser] = useState({\n    name: \"Bob\",\n    getUserToken: getUserToken\n  })\n  \n  const [alert, setAlert] = useState({\n    display: false,\n    theme: \"success\",\n    onClick: (theme, display) => setAlert({...alert, theme, display})\n  })\n\n  function getUserToken() {\n    return \"SampleToken123\";\n  }\n\n  // Here we are overwriting each Context Object with values from the state of App.js and a string literal.\n    return (\n      <AlertContext.Provider value={alert}>\n        <UserContext.Provider value={user}>\n          <ThemeContext.Provider value={\"dark\"}>\n            <Home />\n          </ThemeContext.Provider>\n        </UserContext.Provider>\n      </AlertContext.Provider>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}