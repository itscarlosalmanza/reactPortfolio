{"ast":null,"code":"var _jsxFileName = \"/Users/carlosalmanza/Desktop/class-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport AlertContext from \"./utils/AlertContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pageState, setPageState] = useState({\n    display: false,\n    theme: \"success\",\n    onClick: (theme, display) => {\n      // Remember, the setter method on state does not merge like this.setState does\n      // We use the spread operator so that we don't lose our onClick method whenever the state is updated.\n      setPageState({ ...pageState,\n        theme,\n        display\n      });\n    }\n  }); // App component that provides initial context values\n  // Here we are overwritting the context object to be equal to the state of App\n\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: pageState,\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uoRbNavzOFCo/lkrgLe81qQ2Wuc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/carlosalmanza/Desktop/class-app/src/App.js"],"names":["React","useState","Home","AlertContext","App","pageState","setPageState","display","theme","onClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC;AACzCM,IAAAA,OAAO,EAAE,KADgC;AAEzCC,IAAAA,KAAK,EAAE,SAFkC;AAGzCC,IAAAA,OAAO,EAAE,CAACD,KAAD,EAAQD,OAAR,KAAoB;AAC3B;AACA;AACAD,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBG,QAAAA,KAAhB;AAAuBD,QAAAA;AAAvB,OAAD,CAAZ;AACD;AAPwC,GAAD,CAA1C,CAFa,CAWb;AACA;;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEF,SAA9B;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlBQD,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport AlertContext from \"./utils/AlertContext\";\n\nfunction App() {\n\n  const [pageState, setPageState] = useState({\n    display: false,\n    theme: \"success\",\n    onClick: (theme, display) => {\n      // Remember, the setter method on state does not merge like this.setState does\n      // We use the spread operator so that we don't lose our onClick method whenever the state is updated.\n      setPageState({ ...pageState, theme, display });\n    }\n  });\n  // App component that provides initial context values\n  // Here we are overwritting the context object to be equal to the state of App\n  return (\n    <AlertContext.Provider value={pageState}>\n      <Home />\n    </AlertContext.Provider>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}